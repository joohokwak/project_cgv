<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.project.cgv.dao.MovieDao">
	<!-- movie -->
	<select id="movieList" resultType="hashmap">
		select * from movie order by m_like desc
	</select>
	
	<select id="movieDetail" parameterType="int" resultType="hashmap">
		select * from movie where m_num = #{value}
	</select>
	
	<update id="likeUp" parameterType="int">
		update movie set m_like = m_like + 1 where m_num = #{value}
	</update>
	
	<update id="likeDown" parameterType="int">
		update movie set m_like = m_like - 1 where m_num = #{value}
	</update>
	
	<select id="likeUpResult" parameterType="int" resultType="int">
		select m_like from movie where m_num = #{value}
	</select>
	
	<select id="movieEndTime" parameterType="hashmap" resultType="String">
		select date_format(date_add(time(#{movieStartTime}), interval m_time minute), '%H:%i') from movie where m_num=#{m_num}
	</select>
	
	
	
	<!-- stealcut -->
	<select id="stealcutList" parameterType="int" resultType="hashmap">
		select * from stealcut where m_num = #{value}
	</select>
	
	
	
	<!-- video -->
	<select id="trailerList" parameterType="int" resultType="hashmap">
		select * from video where m_num = #{value}
	</select>
	
	
	
	<!-- theater -->
	<select id="theaterList" resultType="hashmap">
		select * from theater order by t_name
	</select>
	
	<select id="getTheater" parameterType="int" resultType="hashmap">
		select * from theater where t_num = #{value}
	</select>
	

	
	<!-- screen -->
	<select id="getScreen" parameterType="int" resultType="hashmap">
		select * from screen where s_num = #{value}
	</select>
	
	
	<!-- movieTime -->
	<select id="movieTimeInfo" parameterType="hashmap" resultType="hashmap">
		select s.*, t.mt_num, t.mt_time, t.mt_date 
			from screen s join movieTime t  
				using(s_num) 
				where s.t_num=#{t_num} 
					and s.m_num=#{m_num} and t.mt_date=#{mt_date} 
				order by t.s_num, t.mt_time, t.mt_date
	</select>
	
	<select id="timeGroupSeat" parameterType="String" resultType="hashmap">
		select mt_time, count(*) as tgs 
			from movietime m join seat s 
			using(mt_num) 
			where mt_date = #{value} 
			group by mt_time
	</select>
	
	<select id="mtNumSearch" parameterType="hashmap" resultType="int">
		select mt_num from movietime where mt_time=#{mt_time} and mt_date=#{mt_date} and s_num=#{s_num}
	</select>
	
	<!-- seat -->
	<insert id="seatInsert" parameterType="hashmap">
		insert into seat values(0, #{s_num}, #{mt_num}, #{seat_status})
	</insert>
	
	<select id="seatList" parameterType="hashmap" resultType="hashmap">
		select seat_status 
			from seat join movietime
				on seat.s_num = movietime.s_num 
			where seat.s_num=#{s_num} 
				and seat.mt_num= 
					(select mt_num 
						from movietime 
						where mt_time=#{mt_time} 
							and mt_date=#{mt_date} 
							and s_num=#{s_num} 
						group by movietime.mt_time, movietime.mt_date, movietime.s_num) 
			group by seat_status
	</select>
	
	<!-- reserve -->
	<insert id="reserveSign" parameterType="hashmap">
		insert into reserve values(0, #{rv_theater}, #{rv_screen}, #{rv_date}, #{rv_time}, #{rv_people}, #{rv_pay}, #{rv_seat}, #{id}, #{m_num}, #{t_num}, #{s_num})
	</insert>
	
	<!-- genreList -->
	<select id="getGenreList" resultType="HashMap">
		select * from genre
	</select>
	
	<!-- movie_re -->
	<insert id="mrInsert" parameterType="hashmap">
		insert into movie_re(mr_img, id, mr_content, mr_score, m_num) values(#{mr_img}, #{id}, #{mr_content}, #{mr_score}, #{m_num})
	</insert>
	
	<select id="mrList" parameterType="int" resultType="hashmap">
		select * from movie_re where m_num = #{value} order by mr_num desc
	</select>
	
	<delete id="mrDelete" parameterType="int">
		delete from movie_re where mr_num = #{value}
	</delete>
	
	<!-- movie crud -->
	<!-- insertData -->
	<insert id="insertMovie" parameterType="HashMap">
		insert into movie 
			values(0, #{title_kor}, #{title_eng},
		 		#{producer}, #{grade}, #{time}, 
		 			#{made}, #{company}, #{start}, 
		 				#{end}, <include refid="site"/>, 0, #{content}, 'no-image.jpg', #{genre})
	</insert>
	
	<update id="updateMovie">
		update movie set m_title1 = #{title_kor}, m_title2 = #{title_eng}, m_producer = #{producer},
			m_grade = #{grade}, m_time = #{time}, m_made = #{made}, m_company = #{company}, 
			m_start = #{start}, m_end = #{end}, m_site = <include refid="site"/>, m_content = #{content},
			m_genre = #{genre}
			where m_num = #{num}
	</update>
	
	<select id="searchMovieList" parameterType="HashMap" resultType="HashMap">
		select * from movie order by m_num limit #{skip},#{qty}
	</select>
	
	<select id="getMovieCount" resultType="int">
		select count(*) from movie; 
	</select>
	
	<sql id="site">
		<choose>
			<when test="site == null">
				null
			</when>
			<otherwise>
				#{site}
			</otherwise>
		</choose>
	</sql>
	
	<!-- images -->
	<update id="updatePoster" parameterType="HashMap">
		update movie set m_poster=#{image} where m_num=#{num}
	</update>
	
	<insert id="insertStealCut">
		insert into stealcut values(0, #{num}, #{image})
	</insert>
	
	
	
</mapper>